cts_GSE133039_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE133039_GeneLevel_Raw_data.csv"
cts_GSE133039 <- read.csv(cts_GSE133039_path)
# Clean Matrix
cts_GSE133039 <- aggregate(cts_GSE133039[,-1], list(cts_GSE133039$gene_symbol), mean)
rownames(cts_GSE133039) <- cts_GSE133039$Group.1
cts_GSE133039 <- subset(cts_GSE133039, select = -Group.1 )
cts_GSE133039[,]<- lapply(lapply(cts_GSE133039[,-1],round),as.integer)
# Import Data
cts_GSE89775_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE89775_GeneLevel_Raw_data.csv"
cts_GSE89775<- read.csv(cts_GSE89775_path)
# Clean Matrix
cts_GSE89775 <- aggregate(cts_GSE89775[,-1], list(cts_GSE89775$gene_symbol), mean)
rownames(cts_GSE89775) <- cts_GSE89775$Group.1
cts_GSE89775 <- subset(cts_GSE89775, select = -Group.1 )
cts_GSE89775[,]<- lapply(lapply(cts_GSE89775[,-1],round),as.integer)
# Import Data
cts_GSE151347_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE151347_GeneLevel_Raw_data.csv"
cts_GSE151347 <- read.csv(cts_GSE151347_path)
# Clean Matrix
cts_GSE151347 <- aggregate(cts_GSE151347[,-1], list(cts_GSE151347$gene_symbol), mean)
rownames(cts_GSE151347) <- cts_GSE151347$Group.1
cts_GSE151347 <- subset(cts_GSE151347, select = -Group.1 )
cts_GSE151347[,]<- lapply(lapply(cts_GSE151347[,-1],round),as.integer)
# Import Data
cts_GSE81928_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE81928_GeneLevel_Raw_data.csv"
cts_GSE81928 <- read.csv(cts_GSE81928_path)
# Clean Matrix
cts_GSE81928 <- aggregate(cts_GSE81928[,-1], list(cts_GSE81928$gene_symbol), mean)
rownames(cts_GSE81928) <- cts_GSE81928$Group.1
cts_GSE81928 <- subset(cts_GSE81928, select = -Group.1 )
cts_GSE81928[,]<- lapply(lapply(cts_GSE81928[,-1],round),as.integer)
# Import Metadata
Meta_GSE104766_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE104766_filtered_metadata.csv'
coldata_GSE104766 <- read.csv(Meta_GSE104766_path, row.names=1)
coldata_GSE104766$tissue <- factor(coldata_GSE104766$tissue)
# Import Metadata
Meta_GSE133039_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE133039_filtered_metadata.csv'
coldata_GSE133039 <- read.csv(Meta_GSE133039_path, row.names=1)
coldata_GSE133039$tissue <- factor(coldata_GSE133039$tissue)
# Import Metadata
Meta_GSE89775_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE89775_filtered_metadata.csv'
coldata_GSE89775 <- read.csv(Meta_GSE89775_path, row.names=1)
coldata_GSE89775$tissue <- factor(coldata_GSE89775$tissue)
# Import Metadata
Meta_GSE151347_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE151347_filtered_metadata.csv'
coldata_GSE151347 <- read.csv(Meta_GSE151347_path, row.names=1)
coldata_GSE151347$tissue <- factor(coldata_GSE151347$tissue)
# Import Metadata
Meta_GSE81928_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE81928_filtered_metadata.csv'
coldata_GSE81928 <- read.csv(Meta_GSE81928_path, row.names=1)
coldata_GSE81928$tissue <- factor(coldata_GSE81928$tissue)
all(rownames(coldata_GSE104766) %in% colnames(cts_GSE104766))
cts_GSE133039 <- cts_GSE104766[, rownames(coldata_GSE104766)]
all(rownames(coldata_GSE104766) == colnames(cts_GSE104766))
write.csv(cts_GSE104766, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE104766_raw_data.csv", sep="\t",row.names = TRUE, col.names=TRUE)
write.csv(coldata_GSE104766, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE89775_metadata.csv", sep="\t",row.names = TRUE, col.names=TRUE)
all(rownames(coldata_GSE133039) %in% colnames(cts_GSE133039))
cts_GSE133039 <- cts_GSE133039[, rownames(coldata_GSE133039)]
all(rownames(coldata_GSE133039) %in% colnames(cts_GSE133039))
cts_GSE133039 <- cts_GSE133039[, rownames(coldata_GSE133039)]
all(rownames(coldata_GSE133039) %in% colnames(cts_GSE133039))
all(rownames(coldata_GSE133039) == colnames(cts_GSE133039))
all(rownames(coldata_GSE133039) %in% colnames(cts_GSE133039))
#cts_GSE133039 <- cts_GSE133039[, rownames(coldata_GSE133039)]
#all(rownames(coldata_GSE133039) == colnames(cts_GSE133039))
rownames(coldata_GSE133039)
colnames(cts_GSE133039)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
library(tidyverse)
library(readr)
library(DESeq2)
library(apeglm)
library(RobustRankAggreg)
library(BiocParallel)
register(MulticoreParam(2))
#Import Matrix
cts_GSE104766_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
cts_GSE104766 <- read.csv(cts_GSE104766_path)
# Clean Matrix
cts_GSE104766 <- aggregate(cts_GSE104766[,-1], list(cts_GSE104766$gene_symbol), mean)
rownames(cts_GSE104766) <- cts_GSE104766$Group.1
cts_GSE104766 <- subset(cts_GSE104766, select = -Group.1)
cts_GSE104766 <- subset(cts_GSE104766, select = -gene_symbol)
cts_GSE104766[,]<- lapply(lapply(cts_GSE104766[,-1],round),as.integer)
#Import Matrix
cts_GSE133039_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE133039_GeneLevel_Raw_data.csv"
cts_GSE133039 <- read.csv(cts_GSE133039_path)
# Clean Matrix
cts_GSE133039 <- aggregate(cts_GSE133039[,-1], list(cts_GSE133039$gene_symbol), mean)
rownames(cts_GSE133039) <- cts_GSE133039$Group.1
cts_GSE133039 <- subset(cts_GSE133039, select = -Group.1 )
cts_GSE133039[,]<- lapply(lapply(cts_GSE133039[,-1],round),as.integer)
# Import Data
cts_GSE89775_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE89775_GeneLevel_Raw_data.csv"
cts_GSE89775<- read.csv(cts_GSE89775_path)
# Clean Matrix
cts_GSE89775 <- aggregate(cts_GSE89775[,-1], list(cts_GSE89775$gene_symbol), mean)
rownames(cts_GSE89775) <- cts_GSE89775$Group.1
cts_GSE89775 <- subset(cts_GSE89775, select = -Group.1 )
cts_GSE89775[,]<- lapply(lapply(cts_GSE89775[,-1],round),as.integer)
# Import Data
cts_GSE151347_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE151347_GeneLevel_Raw_data.csv"
cts_GSE151347 <- read.csv(cts_GSE151347_path)
# Clean Matrix
cts_GSE151347 <- aggregate(cts_GSE151347[,-1], list(cts_GSE151347$gene_symbol), mean)
rownames(cts_GSE151347) <- cts_GSE151347$Group.1
cts_GSE151347 <- subset(cts_GSE151347, select = -Group.1 )
cts_GSE151347[,]<- lapply(lapply(cts_GSE151347[,-1],round),as.integer)
# Import Data
cts_GSE81928_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE81928_GeneLevel_Raw_data.csv"
cts_GSE81928 <- read.csv(cts_GSE81928_path)
# Clean Matrix
cts_GSE81928 <- aggregate(cts_GSE81928[,-1], list(cts_GSE81928$gene_symbol), mean)
rownames(cts_GSE81928) <- cts_GSE81928$Group.1
cts_GSE81928 <- subset(cts_GSE81928, select = -Group.1 )
cts_GSE81928[,]<- lapply(lapply(cts_GSE81928[,-1],round),as.integer)
# Import Metadata
Meta_GSE104766_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE104766_filtered_metadata.csv'
coldata_GSE104766 <- read.csv(Meta_GSE104766_path, row.names=1)
coldata_GSE104766$tissue <- factor(coldata_GSE104766$tissue)
# Import Metadata
Meta_GSE133039_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE133039_filtered_metadata.csv'
coldata_GSE133039 <- read.csv(Meta_GSE133039_path, row.names=1)
coldata_GSE133039$tissue <- factor(coldata_GSE133039$tissue)
# Import Metadata
Meta_GSE89775_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE89775_filtered_metadata.csv'
coldata_GSE89775 <- read.csv(Meta_GSE89775_path, row.names=1)
coldata_GSE89775$tissue <- factor(coldata_GSE89775$tissue)
# Import Metadata
Meta_GSE151347_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE151347_filtered_metadata.csv'
coldata_GSE151347 <- read.csv(Meta_GSE151347_path, row.names=1)
coldata_GSE151347$tissue <- factor(coldata_GSE151347$tissue)
# Import Metadata
Meta_GSE81928_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE81928_filtered_metadata.csv'
coldata_GSE81928 <- read.csv(Meta_GSE81928_path, row.names=1)
coldata_GSE81928$tissue <- factor(coldata_GSE81928$tissue)
all(rownames(coldata_GSE104766) %in% colnames(cts_GSE104766))
cts_GSE104766 <- cts_GSE104766[, rownames(coldata_GSE104766)]
all(rownames(coldata_GSE104766) == colnames(cts_GSE104766))
write.csv(cts_GSE104766, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE104766_raw_data.csv", sep="\t",row.names = TRUE, col.names=TRUE)
write.csv(coldata_GSE104766, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE89775_metadata.csv", sep="\t",row.names = TRUE, col.names=TRUE)
all(rownames(coldata_GSE133039) %in% colnames(cts_GSE133039))
cts_GSE133039 <- cts_GSE133039[, rownames(coldata_GSE133039)]
all(rownames(coldata_GSE133039) == colnames(cts_GSE133039))
write.csv(cts_GSE133039, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE133039_raw_data.csv", sep="\t",row.names = TRUE, col.names=TRUE)
write.csv(coldata_GSE133039, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE133039_metadata.csv", sep="\t",row.names = TRUE, col.names=TRUE)
all(rownames(coldata_GSE89775) %in% colnames(cts_GSE89775))
cts_GSE133039 <- cts_GSE89775[, rownames(coldata_GSE89775)]
all(rownames(coldata_GSE89775) == colnames(cts_GSE89775))
write.csv(cts_GSE89775, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE89775_raw_data.csv", sep="\t",row.names = TRUE, col.names=TRUE)
write.csv(coldata_GSE89775, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE89775_metadata.csv", sep="\t",row.names = TRUE, col.names=TRUE)
all(rownames(coldata_GSE151347) %in% colnames(cts_GSE151347))
cts_GSE151347 <- cts_GSE151347[, rownames(coldata_GSE151347)]
all(rownames(coldata_GSE151347) == colnames(cts_GSE151347))
write.csv(cts_GSE151347, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE151347_raw_data.csv", sep="\t",row.names = TRUE, col.names=TRUE)
write.csv(coldata_GSE151347, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE151347_metadata.csv", sep="\t",row.names = TRUE, col.names=TRUE)
all(rownames(coldata_GSE81928) %in% colnames(cts_GSE81928))
cts_GSE81928 <- cts_GSE81928[, rownames(coldata_GSE81928)]
all(rownames(coldata_GSE81928) == colnames(cts_GSE81928))
write.csv(cts_GSE81928, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE81928_raw_data.csv", sep="\t",row.names = TRUE, col.names=TRUE)
write.csv(coldata_GSE81928, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE81928_metadata.csv", sep="\t",row.names = TRUE, col.names=TRUE)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
library(tidyverse)
library(readr)
library(DESeq2)
library(apeglm)
library(RobustRankAggreg)
library(BiocParallel)
register(MulticoreParam(2))
#Import Matrix
cts_GSE104766_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
cts_GSE104766 <- read.csv(cts_GSE104766_path)
# Clean Matrix
cts_GSE104766 <- aggregate(cts_GSE104766[,-1], list(cts_GSE104766$gene_symbol), mean)
rownames(cts_GSE104766) <- cts_GSE104766$Group.1
cts_GSE104766 <- subset(cts_GSE104766, select = -Group.1)
cts_GSE104766 <- subset(cts_GSE104766, select = -gene_symbol)
cts_GSE104766[,]<- lapply(lapply(cts_GSE104766[,-1],round),as.integer)
#Import Matrix
cts_GSE133039_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE133039_GeneLevel_Raw_data.csv"
cts_GSE133039 <- read.csv(cts_GSE133039_path)
# Clean Matrix
cts_GSE133039 <- aggregate(cts_GSE133039[,-1], list(cts_GSE133039$gene_symbol), mean)
rownames(cts_GSE133039) <- cts_GSE133039$Group.1
cts_GSE133039 <- subset(cts_GSE133039, select = -Group.1 )
cts_GSE133039[,]<- lapply(lapply(cts_GSE133039[,-1],round),as.integer)
# Import Data
cts_GSE89775_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE89775_GeneLevel_Raw_data.csv"
cts_GSE89775<- read.csv(cts_GSE89775_path)
# Clean Matrix
cts_GSE89775 <- aggregate(cts_GSE89775[,-1], list(cts_GSE89775$gene_symbol), mean)
rownames(cts_GSE89775) <- cts_GSE89775$Group.1
cts_GSE89775 <- subset(cts_GSE89775, select = -Group.1 )
cts_GSE89775[,]<- lapply(lapply(cts_GSE89775[,-1],round),as.integer)
# Import Data
cts_GSE151347_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE151347_GeneLevel_Raw_data.csv"
cts_GSE151347 <- read.csv(cts_GSE151347_path)
# Clean Matrix
cts_GSE151347 <- aggregate(cts_GSE151347[,-1], list(cts_GSE151347$gene_symbol), mean)
rownames(cts_GSE151347) <- cts_GSE151347$Group.1
cts_GSE151347 <- subset(cts_GSE151347, select = -Group.1 )
cts_GSE151347[,]<- lapply(lapply(cts_GSE151347[,-1],round),as.integer)
# Import Data
cts_GSE81928_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE81928_GeneLevel_Raw_data.csv"
cts_GSE81928 <- read.csv(cts_GSE81928_path)
# Clean Matrix
cts_GSE81928 <- aggregate(cts_GSE81928[,-1], list(cts_GSE81928$gene_symbol), mean)
rownames(cts_GSE81928) <- cts_GSE81928$Group.1
cts_GSE81928 <- subset(cts_GSE81928, select = -Group.1 )
cts_GSE81928[,]<- lapply(lapply(cts_GSE81928[,-1],round),as.integer)
# Import Metadata
Meta_GSE104766_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE104766_filtered_metadata.csv'
coldata_GSE104766 <- read.csv(Meta_GSE104766_path, row.names=1)
coldata_GSE104766$tissue <- factor(coldata_GSE104766$tissue)
# Import Metadata
Meta_GSE133039_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE133039_filtered_metadata.csv'
coldata_GSE133039 <- read.csv(Meta_GSE133039_path, row.names=1)
coldata_GSE133039$tissue <- factor(coldata_GSE133039$tissue)
# Import Metadata
Meta_GSE89775_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE89775_filtered_metadata.csv'
coldata_GSE89775 <- read.csv(Meta_GSE89775_path, row.names=1)
coldata_GSE89775$tissue <- factor(coldata_GSE89775$tissue)
# Import Metadata
Meta_GSE151347_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE151347_filtered_metadata.csv'
coldata_GSE151347 <- read.csv(Meta_GSE151347_path, row.names=1)
coldata_GSE151347$tissue <- factor(coldata_GSE151347$tissue)
# Import Metadata
Meta_GSE81928_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE81928_filtered_metadata.csv'
coldata_GSE81928 <- read.csv(Meta_GSE81928_path, row.names=1)
coldata_GSE81928$tissue <- factor(coldata_GSE81928$tissue)
all(rownames(coldata_GSE104766) %in% colnames(cts_GSE104766))
cts_GSE104766 <- cts_GSE104766[, rownames(coldata_GSE104766)]
all(rownames(coldata_GSE104766) == colnames(cts_GSE104766))
write.csv(cts_GSE104766, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE104766_raw_data.csv", sep="\t",row.names = TRUE, col.names=TRUE)
write.csv(coldata_GSE104766, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE89775_metadata.csv", sep="\t",row.names = TRUE, col.names=TRUE)
all(rownames(coldata_GSE133039) %in% colnames(cts_GSE133039))
cts_GSE133039 <- cts_GSE133039[, rownames(coldata_GSE133039)]
all(rownames(coldata_GSE133039) == colnames(cts_GSE133039))
write.csv(cts_GSE133039, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE133039_raw_data.csv", sep="\t",row.names = TRUE, col.names=TRUE)
write.csv(coldata_GSE133039, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE133039_metadata.csv", sep="\t",row.names = TRUE, col.names=TRUE)
all(rownames(coldata_GSE89775) %in% colnames(cts_GSE89775))
cts_GSE133039 <- cts_GSE89775[, rownames(coldata_GSE89775)]
all(rownames(coldata_GSE89775) == colnames(cts_GSE89775))
write.csv(cts_GSE89775, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE89775_raw_data.csv", sep="\t",row.names = TRUE, col.names=TRUE)
write.csv(coldata_GSE89775, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE89775_metadata.csv", sep="\t",row.names = TRUE, col.names=TRUE)
all(rownames(coldata_GSE151347) %in% colnames(cts_GSE151347))
cts_GSE151347 <- cts_GSE151347[, rownames(coldata_GSE151347)]
all(rownames(coldata_GSE151347) == colnames(cts_GSE151347))
write.csv(cts_GSE151347, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE151347_raw_data.csv", sep="\t",row.names = TRUE, col.names=TRUE)
write.csv(coldata_GSE151347, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE151347_metadata.csv", sep="\t",row.names = TRUE, col.names=TRUE)
all(rownames(coldata_GSE81928) %in% colnames(cts_GSE81928))
cts_GSE81928 <- cts_GSE81928[, rownames(coldata_GSE81928)]
all(rownames(coldata_GSE81928) == colnames(cts_GSE81928))
write.csv(cts_GSE81928, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE81928_raw_data.csv", sep="\t",row.names = TRUE, col.names=TRUE)
write.csv(coldata_GSE81928, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE81928_metadata.csv", sep="\t",row.names = TRUE, col.names=TRUE)
setwd("~/Documents/TFM/GitHub/HB_PublicData")
library(tidyverse)
library(dplyr)
library(stringr)
library(RobustRankAggreg)
mydir = "HB_PublicData/1-Obtaining-DEGs-for-HB/DEGs_HB/Ranks_HB/"
myfiles = list.files(path=mydir, pattern="*.csv", full.names=TRUE)
library(tidyverse)
library(dplyr)
library(stringr)
library(RobustRankAggreg)
mydir = "HB_PublicData/1-Obtaining-DEGs-for-HB/DEGs_HB/Ranks_HB/"
myfiles = list.files(path=mydir, pattern="*.csv", full.names=TRUE)
library(tidyverse)
library(dplyr)
library(stringr)
library(RobustRankAggreg)
mydir = "HB_PublicData/1-Obtaining-DEGs-for-HB/DEGs_HB/Ranks_HB/"
myfiles = list.files(path=mydir, pattern="*.csv", full.names=TRUE)
mydir = "HB_PublicData/1-Obtaining-DEGs-for-HB/DEGs_HB/Ranks_HB/"
myfiles = list.files(path=mydir, pattern="*.csv", full.names=TRUE)
mydir = "1-Obtaining-DEGs-for-HB/DEGs_HB/Ranks_HB/"
myfiles = list.files(path=mydir, pattern="*.csv", full.names=TRUE)
mydir = "1-Obtaining-DEGs-for-HB/DEGs_HB/Ranks_HB"
myfiles = list.files(path=mydir, pattern="*.csv", full.names=TRUE)
# Read DEGs files
filenames <- list.files(path="HB_PublicData/1-Obtaining-DEGs-for-HB/DEGs_HB/Ranks_HB",
pattern="*.csv")
# Read DEGs files
filenames <- list.files(path="1-Obtaining-DEGs-for-HB/DEGs_HB/Ranks_HB",
pattern="*.csv")
## Create list of data frame names without the ".csv" part
names <-substr(filenames,1,str_length(filenames)-4)
# Read DEGs files
filenames <- list.files(path="1-Obtaining-DEGs-for-HB/DEGs_HB/Ranks_HB",
pattern="*.csv")
## Create list of data frame names without the ".csv" part
names <-substr(filenames,1,str_length(filenames)-4)
## Load all files
for(i in names){
filepath <- file.path("HB_PublicData/1-Obtaining-DEGs-for-HB/DEGs_HB/Ranks_HB",paste(i,".csv",sep=""))
assign(i, read.csv(filepath,colClasses=c("character","double","double")))
}
# Rank downregulated
## Rename columns
colnames(GSE133039_DEGs_down)[1] <- "genes"
colnames(GSE151347_DEGs_down)[1] <- "genes"
colnames(GSE104766_DEGs_down)[1] <- "genes"
colnames(GSE81928_DEGs_down)[1] <- "genes"
colnames(GSE89775_DEGs_down)[1] <- "genes"
## Lists
GSE133039_DEGs_down <- GSE133039_DEGs_down %>%
pull(var=1) %>%
as.matrix(nrow=1)
GSE151347_DEGs_down <- GSE151347_DEGs_down %>%
pull(var=1) %>%
as.matrix(nrow=1)
GSE104766_DEGs_down <- GSE104766_DEGs_down %>%
pull(var=1) %>%
as.matrix(nrow=1)
GSE81928_DEGs_down <- GSE81928_DEGs_down %>%
pull(var=1) %>%
as.matrix(nrow=1)
GSE89775_DEGs_down <- GSE89775_DEGs_down %>%
pull(var=1) %>%
as.matrix(nrow=1)
## Aggregate Ranks
glist_down <- list(GSE133039_DEGs_down, GSE151347_DEGs_down, GSE104766_DEGs_down)
r_down = rankMatrix(glist_down, full = TRUE)
agg_down <- aggregateRanks(rmat = r_down, method = "RRA")
# Rank upregulated
## Rename column
colnames(GSE133039_DEGs_up)[1] <- "genes"
colnames(GSE151347_DEGs_up)[1] <- "genes"
colnames(GSE104766_DEGs_up)[1] <- "genes"
colnames(GSE81928_DEGs_up)[1] <- "genes"
colnames(GSE89775_DEGs_up)[1] <- "genes"
## Lists
GSE133039_DEGs_up <- GSE133039_DEGs_up %>%
pull(var=1) %>%
as.matrix(nrow=1)
GSE151347_DEGs_up <- GSE151347_DEGs_up %>%
pull(var=1) %>%
as.matrix(nrow=1)
GSE104766_DEGs_up <- GSE104766_DEGs_up %>%
pull(var=1) %>%
as.matrix(nrow=1)
GSE81928_DEGs_up <- GSE81928_DEGs_up %>%
pull(var=1) %>%
as.matrix(nrow=1)
GSE89775_DEGs_up <- GSE89775_DEGs_up %>%
pull(var=1) %>%
as.matrix(nrow=1)
## Aggregate Ranks
glist_up <- list(GSE133039_DEGs_up, GSE151347_DEGs_up, GSE104766_DEGs_up)
r_up = rankMatrix(glist_up, full = TRUE)
agg_up <- aggregateRanks(rmat = r_up, method = "RRA")
# Convert results into csv files
write.csv(agg_down, file = "Aggregated_Downregulated.csv")
write.csv(agg_up, file = "Aggregated_Upregulated.csv")
library(tidyverse)
library(dplyr)
library(stringr)
library(RobustRankAggreg)
# Read DEGs files
filenames <- list.files(path="1-Obtaining-DEGs-for-HB/DEGs_HB/Ranks_HB",
pattern="*.csv")
## Create list of data frame names without the ".csv" part
names <-substr(filenames,1,str_length(filenames)-4)
## Load all files
for(i in names){
filepath <- file.path("HB_PublicData/1-Obtaining-DEGs-for-HB/DEGs_HB/Ranks_HB",paste(i,".csv",sep=""))
assign(i, read.csv(filepath,colClasses=c("character","double","double")))
}
## Load all files
for(i in names){
filepath <- file.path("1-Obtaining-DEGs-for-HB/DEGs_HB/Ranks_HB",paste(i,".csv",sep=""))
assign(i, read.csv(filepath,colClasses=c("character","double","double")))
}
library(tidyverse)
library(dplyr)
library(stringr)
library(RobustRankAggreg)
# Read DEGs files
filenames <- list.files(path="1-Obtaining-DEGs-for-HB/DEGs_HB/Ranks_HB",
pattern="*.csv")
## Create list of data frame names without the ".csv" part
names <-substr(filenames,1,str_length(filenames)-4)
## Load all files
for(i in names){
filepath <- file.path("1-Obtaining-DEGs-for-HB/DEGs_HB/Ranks_HB",paste(i,".csv",sep=""))
assign(i, read.csv(filepath,colClasses=c("character","double","double")))
}
# Rank downregulated
## Rename columns
colnames(GSE133039_DEGs_down)[1] <- "genes"
colnames(GSE151347_DEGs_down)[1] <- "genes"
colnames(GSE104766_DEGs_down)[1] <- "genes"
colnames(GSE81928_DEGs_down)[1] <- "genes"
colnames(GSE89775_DEGs_down)[1] <- "genes"
## Lists
GSE133039_DEGs_down <- GSE133039_DEGs_down %>%
pull(var=1) %>%
as.matrix(nrow=1)
GSE151347_DEGs_down <- GSE151347_DEGs_down %>%
pull(var=1) %>%
as.matrix(nrow=1)
GSE104766_DEGs_down <- GSE104766_DEGs_down %>%
pull(var=1) %>%
as.matrix(nrow=1)
GSE81928_DEGs_down <- GSE81928_DEGs_down %>%
pull(var=1) %>%
as.matrix(nrow=1)
GSE89775_DEGs_down <- GSE89775_DEGs_down %>%
pull(var=1) %>%
as.matrix(nrow=1)
## Aggregate Ranks
glist_down <- list(GSE133039_DEGs_down, GSE151347_DEGs_down, GSE104766_DEGs_down)
r_down = rankMatrix(glist_down, full = TRUE)
agg_down <- aggregateRanks(rmat = r_down, method = "RRA")
# Rank upregulated
## Rename column
colnames(GSE133039_DEGs_up)[1] <- "genes"
colnames(GSE151347_DEGs_up)[1] <- "genes"
colnames(GSE104766_DEGs_up)[1] <- "genes"
colnames(GSE81928_DEGs_up)[1] <- "genes"
colnames(GSE89775_DEGs_up)[1] <- "genes"
## Lists
GSE133039_DEGs_up <- GSE133039_DEGs_up %>%
pull(var=1) %>%
as.matrix(nrow=1)
GSE151347_DEGs_up <- GSE151347_DEGs_up %>%
pull(var=1) %>%
as.matrix(nrow=1)
GSE104766_DEGs_up <- GSE104766_DEGs_up %>%
pull(var=1) %>%
as.matrix(nrow=1)
GSE81928_DEGs_up <- GSE81928_DEGs_up %>%
pull(var=1) %>%
as.matrix(nrow=1)
GSE89775_DEGs_up <- GSE89775_DEGs_up %>%
pull(var=1) %>%
as.matrix(nrow=1)
## Aggregate Ranks
glist_up <- list(GSE133039_DEGs_up, GSE151347_DEGs_up, GSE104766_DEGs_up)
r_up = rankMatrix(glist_up, full = TRUE)
agg_up <- aggregateRanks(rmat = r_up, method = "RRA")
# Convert results into csv files
write.csv(agg_down, file = "Aggregated_Downregulated.csv")
write.csv(agg_up, file = "Aggregated_Upregulated.csv")
# Join both lists
genes_down <- list(agg_up$genes)
View(genes_down)
View(agg_down)
genes_down <- list(agg_up$Name)
View(genes_down)
View(agg_down)
genes_down <- list(agg_down$Name)
genes_up <- list(agg_up$Name)
genes <- append(genes_down, genes_up)
View(genes)
# Combine both lists
genes_down <- list(agg_down$Name)
genes_up <- list(agg_up$Name)
combineListsAsOne <-function(list1, list2){
n <- c()
for(x in list1){
n<-c(n, x)
}
for(y in list2){
n<-c(n, y)
}
return(n)
}
genes <- combineListsAsOne(genes_down, genes_up)
# Combine both lists
genes_down <- list(agg_down$Name)
genes_up <- list(agg_up$Name)
combineListsAsOne <-function(list1, list2){
n <- c()
for(x in list1){
n<-c(n, x)
}
for(y in list2){
n<-c(n, y)
}
return(n)
}
combineListsAsOne(genes_down, genes_up)
# Combine both lists
genes_down <- list(agg_down$Name)
genes_up <- list(agg_up$Name)
combineListsAsOne <-function(list1, list2){
n <- c()
for(x in list1){
n<-c(n, x)
}
for(y in list2){
n<-c(n, y)
}
return(n)
}
genes <- combineListsAsOne(genes_down, genes_up)
genes
View(GSE151347_DEGs_down)
write.csv(genes, file = "1-Obtaining-DEGs-for-HB/DEGs_HB/HB_db_DEG.csv")
write.csv(genes, file = "1-Obtaining-DEGs-for-HB/DEGs_HB/HB_db_DEG.csv", row.names=FALSE)
write.csv(genes, file = "1-Obtaining-DEGs-for-HB/DEGs_HB/HB_db_DEG.csv", row.names=FALSE,  col.names=FALSE)
write.table(genes, file = "1-Obtaining-DEGs-for-HB/DEGs_HB/HB_db_DEG.csv",sep=",", row.names=FALSE, col.names=FALSE)
