# Import Data
cts_GSE89775_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE89775_GeneLevel_Raw_data.csv"
cts_GSE89775<- read.csv(cts_GSE89775_path)
# Clean Matrix
cts_GSE89775 <- aggregate(cts_GSE89775[,-1], list(cts_GSE89775$gene_symbol), mean)
rownames(cts_GSE89775) <- cts_GSE89775$Group.1
cts_GSE89775 <- subset(cts_GSE89775, select = -Group.1 )
cts_GSE133039[,]<- lapply(lapply(cts_GSE133039[,-1],round),as.integer)
cts_GSE89775
# Import Data
cts_GSE89775_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE89775_GeneLevel_Raw_data.csv"
cts_GSE89775<- read.csv(cts_GSE89775_path)
# Clean Matrix
cts_GSE89775 <- aggregate(cts_GSE89775[,-1], list(cts_GSE89775$gene_symbol), mean)
rownames(cts_GSE89775) <- cts_GSE89775$Group.1
cts_GSE89775 <- subset(cts_GSE89775, select = -Group.1 )
cts_GSE89775[,]<- lapply(lapply(cts_GSE89775[,-1],round),as.integer)
write.csv(cts_GSE89775, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/cts_GSE89775_raw_data.csv", sep="\t",row.names = TRUE, col.names=TRUE)
# Import Data
cts_GSE151347_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE151347_GeneLevel_Raw_data.csv"
cts_GSE151347 <- read.csv(cts_GSE151347_path)
# Clean Matrix
cts_GSE151347 <- aggregate(cts_GSE151347[,-1], list(cts_GSE151347$gene_symbol), mean)
rownames(cts_GSE151347) <- cts_GSE151347$Group.1
cts_GSE151347 <- subset(cts_GSE151347, select = -Group.1 )
cts_GSE151347[,]<- lapply(lapply(cts_GSE151347[,-1],round),as.integer)
write.csv(cts_GSE151347, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/cts_GSE151347_raw_data.csv", sep="\t",row.names = TRUE, col.names=TRUE)
# Import Data
cts_GSE81928_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE81928_GeneLevel_Raw_data.csv"
cts_GSE81928 <- read.csv(cts_GSE81928_path)
# Clean Matrix
cts_GSE81928 <- aggregate(cts_GSE81928[,-1], list(cts_GSE81928$gene_symbol), mean)
rownames(cts_GSE81928) <- cts_GSE81928$Group.1
cts_GSE81928 <- subset(cts_GSE81928, select = -Group.1 )
cts_GSE81928[,]<- lapply(lapply(cts_GSE81928[,-1],round),as.integer)
write.csv(cts_GSE81928, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/cts_GSE81928_raw_data.csv", sep="\t",row.names = TRUE, col.names=TRUE)
# Import Metadata
Meta_GSE104766_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE104766_filtered_metadata.csv'
coldata_GSE104766 <- read.csv(Meta_GSE104766_path, row.names=1)
coldata_GSE104766$tissue[coldata_GSE104766$tissue == "Normal liver"] <- "Normal"
coldata_GSE104766$tissue <- factor(coldata_GSE104766$tissue)
# Import Metadata
Meta_GSE104766_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE104766_filtered_metadata.csv'
coldata_GSE104766 <- read.csv(Meta_GSE104766_path, row.names=1)
coldata_GSE104766$tissue[coldata_GSE104766$tissue == "Normal liver"] <- "Normal"
coldata_GSE104766$tissue <- factor(coldata_GSE104766$tissue)
coldata_GSE104766
# Import Metadata
Meta_GSE104766_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE104766_filtered_metadata.csv'
coldata_GSE104766 <- read.csv(Meta_GSE104766_path, row.names=1)
coldata_GSE104766$tissue[coldata_GSE104766$tissue == "Normal liver"] <- "Normal"
coldata_GSE133039$tissue[coldata_GSE133039$tissue == "Hepatoblastoma cell line"] <- "Hepatoblastoma"
# Import Metadata
Meta_GSE104766_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE104766_filtered_metadata.csv'
coldata_GSE104766 <- read.csv(Meta_GSE104766_path, row.names=1)
coldata_GSE104766$tissue[coldata_GSE104766$tissue == "Normal liver"] <- "Normal"
coldata_GSE133039$tissue[coldata_GSE133039$tissue == "Tumor liver tissue"] <- "Hepatoblastoma"
# Import Metadata
Meta_GSE104766_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE104766_filtered_metadata.csv'
coldata_GSE104766 <- read.csv(Meta_GSE104766_path, row.names=1)
coldata_GSE104766$tissue[coldata_GSE104766$tissue == "Normal liver"] <- "Normal"
coldata_GSE104766$tissue <- factor(coldata_GSE104766$tissue)
coldata_GSE104766
#Import Matrix
cts_GSE104766_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
cts_GSE104766 <- read.csv(cts_GSE104766_path)
# Clean Matrix
cts_GSE104766 <- aggregate(cts_GSE104766[,-1], list(cts_GSE104766$gene_symbol), mean)
rownames(cts_GSE104766) <- cts_GSE104766$Group.1
cts_GSE104766 <- subset(cts_GSE104766, select = -Group.1)
cts_GSE104766 <- subset(cts_GSE104766, select = -gene_symbol)
cts_GSE104766[,]<- lapply(lapply(cts_GSE104766[,-1],round),as.integer)
#write.csv(cts_GSE104766, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE104766_raw_data.csv", sep="\t",row.names = TRUE, col.names=TRUE)
# Import Metadata
Meta_GSE104766_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE104766_filtered_metadata.csv'
coldata_GSE104766 <- read.csv(Meta_GSE104766_path, row.names=1)
coldata_GSE104766$tissue <- factor(coldata_GSE104766$tissue)
coldata_GSE104766
# Import Metadata
Meta_GSE133039_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE133039_filtered_metadata.csv'
coldata_GSE133039 <- read.csv(Meta_GSE133039_path, row.names=1)
coldata_GSE133039$tissue <- factor(coldata_GSE133039$tissue)
# Import Metadata
Meta_GSE151347_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE151347_filtered_metadata.csv'
coldata_GSE151347 <- read.csv(Meta_GSE151347_path, row.names=1)
coldata_GSE151347$tissue <- factor(coldata_GSE151347$tissue)
# Import Metadata
Meta_GSE81928_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE81928_filtered_metadata.csv'
coldata_GSE81928 <- read.csv(Meta_GSE81928_path, row.names=1)
coldata_GSE81928$tissue <- factor(coldata_GSE81928$tissue)
# Import Metadata
Meta_GSE89775_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE89775_filtered_metadata.csv'
coldata_GSE89775 <- read.csv(Meta_GSE89775_path, row.names=1)
coldata_GSE89775$tissue <- factor(coldata_GSE89775$tissue)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
library(tidyverse)
library(readr)
library(DESeq2)
library(apeglm)
library(RobustRankAggreg)
library(BiocParallel)
register(MulticoreParam(2))
#Import Matrix
cts_GSE104766_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
cts_GSE104766 <- read.csv(cts_GSE104766_path)
# Clean Matrix
cts_GSE104766 <- aggregate(cts_GSE104766[,-1], list(cts_GSE104766$gene_symbol), mean)
rownames(cts_GSE104766) <- cts_GSE104766$Group.1
cts_GSE104766 <- subset(cts_GSE104766, select = -Group.1)
cts_GSE104766 <- subset(cts_GSE104766, select = -gene_symbol)
cts_GSE104766[,]<- lapply(lapply(cts_GSE104766[,-1],round),as.integer)
#Import Matrix
cts_GSE133039_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE133039_GeneLevel_Raw_data.csv"
cts_GSE133039 <- read.csv(cts_GSE133039_path)
# Clean Matrix
cts_GSE133039 <- aggregate(cts_GSE133039[,-1], list(cts_GSE133039$gene_symbol), mean)
rownames(cts_GSE133039) <- cts_GSE133039$Group.1
cts_GSE133039 <- subset(cts_GSE133039, select = -Group.1 )
cts_GSE133039[,]<- lapply(lapply(cts_GSE133039[,-1],round),as.integer)
# Import Data
cts_GSE89775_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE89775_GeneLevel_Raw_data.csv"
cts_GSE89775<- read.csv(cts_GSE89775_path)
# Clean Matrix
cts_GSE89775 <- aggregate(cts_GSE89775[,-1], list(cts_GSE89775$gene_symbol), mean)
rownames(cts_GSE89775) <- cts_GSE89775$Group.1
cts_GSE89775 <- subset(cts_GSE89775, select = -Group.1 )
cts_GSE89775[,]<- lapply(lapply(cts_GSE89775[,-1],round),as.integer)
# Import Data
cts_GSE151347_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE151347_GeneLevel_Raw_data.csv"
cts_GSE151347 <- read.csv(cts_GSE151347_path)
# Clean Matrix
cts_GSE151347 <- aggregate(cts_GSE151347[,-1], list(cts_GSE151347$gene_symbol), mean)
rownames(cts_GSE151347) <- cts_GSE151347$Group.1
cts_GSE151347 <- subset(cts_GSE151347, select = -Group.1 )
cts_GSE151347[,]<- lapply(lapply(cts_GSE151347[,-1],round),as.integer)
# Import Data
cts_GSE81928_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE81928_GeneLevel_Raw_data.csv"
cts_GSE81928 <- read.csv(cts_GSE81928_path)
# Clean Matrix
cts_GSE81928 <- aggregate(cts_GSE81928[,-1], list(cts_GSE81928$gene_symbol), mean)
rownames(cts_GSE81928) <- cts_GSE81928$Group.1
cts_GSE81928 <- subset(cts_GSE81928, select = -Group.1 )
cts_GSE81928[,]<- lapply(lapply(cts_GSE81928[,-1],round),as.integer)
# Import Metadata
Meta_GSE104766_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE104766_filtered_metadata.csv'
coldata_GSE104766 <- read.csv(Meta_GSE104766_path, row.names=1)
coldata_GSE104766$tissue <- factor(coldata_GSE104766$tissue)
# Import Metadata
Meta_GSE133039_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE133039_filtered_metadata.csv'
coldata_GSE133039 <- read.csv(Meta_GSE133039_path, row.names=1)
coldata_GSE133039$tissue <- factor(coldata_GSE133039$tissue)
# Import Metadata
Meta_GSE89775_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE89775_filtered_metadata.csv'
coldata_GSE89775 <- read.csv(Meta_GSE89775_path, row.names=1)
coldata_GSE89775$tissue <- factor(coldata_GSE89775$tissue)
# Import Metadata
Meta_GSE151347_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE151347_filtered_metadata.csv'
coldata_GSE151347 <- read.csv(Meta_GSE151347_path, row.names=1)
coldata_GSE151347$tissue <- factor(coldata_GSE151347$tissue)
# Import Metadata
Meta_GSE81928_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE81928_filtered_metadata.csv'
coldata_GSE81928 <- read.csv(Meta_GSE81928_path, row.names=1)
coldata_GSE81928$tissue <- factor(coldata_GSE81928$tissue)
all(rownames(coldata_GSE104766) %in% colnames(cts_GSE104766))
cts_GSE133039 <- cts_GSE104766[, rownames(coldata_GSE104766)]
all(rownames(coldata_GSE104766) == colnames(cts_GSE104766))
write.csv(cts_GSE104766, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE104766_raw_data.csv", sep="\t",row.names = TRUE, col.names=TRUE)
write.csv(coldata_GSE104766, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE89775_metadata.csv", sep="\t",row.names = TRUE, col.names=TRUE)
all(rownames(coldata_GSE133039) %in% colnames(cts_GSE133039))
cts_GSE133039 <- cts_GSE133039[, rownames(coldata_GSE133039)]
all(rownames(coldata_GSE133039) %in% colnames(cts_GSE133039))
cts_GSE133039 <- cts_GSE133039[, rownames(coldata_GSE133039)]
all(rownames(coldata_GSE133039) %in% colnames(cts_GSE133039))
all(rownames(coldata_GSE133039) == colnames(cts_GSE133039))
all(rownames(coldata_GSE133039) %in% colnames(cts_GSE133039))
#cts_GSE133039 <- cts_GSE133039[, rownames(coldata_GSE133039)]
#all(rownames(coldata_GSE133039) == colnames(cts_GSE133039))
rownames(coldata_GSE133039)
colnames(cts_GSE133039)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
library(tidyverse)
library(readr)
library(DESeq2)
library(apeglm)
library(RobustRankAggreg)
library(BiocParallel)
register(MulticoreParam(2))
#Import Matrix
cts_GSE104766_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
cts_GSE104766 <- read.csv(cts_GSE104766_path)
# Clean Matrix
cts_GSE104766 <- aggregate(cts_GSE104766[,-1], list(cts_GSE104766$gene_symbol), mean)
rownames(cts_GSE104766) <- cts_GSE104766$Group.1
cts_GSE104766 <- subset(cts_GSE104766, select = -Group.1)
cts_GSE104766 <- subset(cts_GSE104766, select = -gene_symbol)
cts_GSE104766[,]<- lapply(lapply(cts_GSE104766[,-1],round),as.integer)
#Import Matrix
cts_GSE133039_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE133039_GeneLevel_Raw_data.csv"
cts_GSE133039 <- read.csv(cts_GSE133039_path)
# Clean Matrix
cts_GSE133039 <- aggregate(cts_GSE133039[,-1], list(cts_GSE133039$gene_symbol), mean)
rownames(cts_GSE133039) <- cts_GSE133039$Group.1
cts_GSE133039 <- subset(cts_GSE133039, select = -Group.1 )
cts_GSE133039[,]<- lapply(lapply(cts_GSE133039[,-1],round),as.integer)
# Import Data
cts_GSE89775_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE89775_GeneLevel_Raw_data.csv"
cts_GSE89775<- read.csv(cts_GSE89775_path)
# Clean Matrix
cts_GSE89775 <- aggregate(cts_GSE89775[,-1], list(cts_GSE89775$gene_symbol), mean)
rownames(cts_GSE89775) <- cts_GSE89775$Group.1
cts_GSE89775 <- subset(cts_GSE89775, select = -Group.1 )
cts_GSE89775[,]<- lapply(lapply(cts_GSE89775[,-1],round),as.integer)
# Import Data
cts_GSE151347_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE151347_GeneLevel_Raw_data.csv"
cts_GSE151347 <- read.csv(cts_GSE151347_path)
# Clean Matrix
cts_GSE151347 <- aggregate(cts_GSE151347[,-1], list(cts_GSE151347$gene_symbol), mean)
rownames(cts_GSE151347) <- cts_GSE151347$Group.1
cts_GSE151347 <- subset(cts_GSE151347, select = -Group.1 )
cts_GSE151347[,]<- lapply(lapply(cts_GSE151347[,-1],round),as.integer)
# Import Data
cts_GSE81928_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE81928_GeneLevel_Raw_data.csv"
cts_GSE81928 <- read.csv(cts_GSE81928_path)
# Clean Matrix
cts_GSE81928 <- aggregate(cts_GSE81928[,-1], list(cts_GSE81928$gene_symbol), mean)
rownames(cts_GSE81928) <- cts_GSE81928$Group.1
cts_GSE81928 <- subset(cts_GSE81928, select = -Group.1 )
cts_GSE81928[,]<- lapply(lapply(cts_GSE81928[,-1],round),as.integer)
# Import Metadata
Meta_GSE104766_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE104766_filtered_metadata.csv'
coldata_GSE104766 <- read.csv(Meta_GSE104766_path, row.names=1)
coldata_GSE104766$tissue <- factor(coldata_GSE104766$tissue)
# Import Metadata
Meta_GSE133039_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE133039_filtered_metadata.csv'
coldata_GSE133039 <- read.csv(Meta_GSE133039_path, row.names=1)
coldata_GSE133039$tissue <- factor(coldata_GSE133039$tissue)
# Import Metadata
Meta_GSE89775_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE89775_filtered_metadata.csv'
coldata_GSE89775 <- read.csv(Meta_GSE89775_path, row.names=1)
coldata_GSE89775$tissue <- factor(coldata_GSE89775$tissue)
# Import Metadata
Meta_GSE151347_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE151347_filtered_metadata.csv'
coldata_GSE151347 <- read.csv(Meta_GSE151347_path, row.names=1)
coldata_GSE151347$tissue <- factor(coldata_GSE151347$tissue)
# Import Metadata
Meta_GSE81928_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE81928_filtered_metadata.csv'
coldata_GSE81928 <- read.csv(Meta_GSE81928_path, row.names=1)
coldata_GSE81928$tissue <- factor(coldata_GSE81928$tissue)
all(rownames(coldata_GSE104766) %in% colnames(cts_GSE104766))
cts_GSE104766 <- cts_GSE104766[, rownames(coldata_GSE104766)]
all(rownames(coldata_GSE104766) == colnames(cts_GSE104766))
write.csv(cts_GSE104766, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE104766_raw_data.csv", sep="\t",row.names = TRUE, col.names=TRUE)
write.csv(coldata_GSE104766, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE89775_metadata.csv", sep="\t",row.names = TRUE, col.names=TRUE)
all(rownames(coldata_GSE133039) %in% colnames(cts_GSE133039))
cts_GSE133039 <- cts_GSE133039[, rownames(coldata_GSE133039)]
all(rownames(coldata_GSE133039) == colnames(cts_GSE133039))
write.csv(cts_GSE133039, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE133039_raw_data.csv", sep="\t",row.names = TRUE, col.names=TRUE)
write.csv(coldata_GSE133039, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE133039_metadata.csv", sep="\t",row.names = TRUE, col.names=TRUE)
all(rownames(coldata_GSE89775) %in% colnames(cts_GSE89775))
cts_GSE133039 <- cts_GSE89775[, rownames(coldata_GSE89775)]
all(rownames(coldata_GSE89775) == colnames(cts_GSE89775))
write.csv(cts_GSE89775, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE89775_raw_data.csv", sep="\t",row.names = TRUE, col.names=TRUE)
write.csv(coldata_GSE89775, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE89775_metadata.csv", sep="\t",row.names = TRUE, col.names=TRUE)
all(rownames(coldata_GSE151347) %in% colnames(cts_GSE151347))
cts_GSE151347 <- cts_GSE151347[, rownames(coldata_GSE151347)]
all(rownames(coldata_GSE151347) == colnames(cts_GSE151347))
write.csv(cts_GSE151347, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE151347_raw_data.csv", sep="\t",row.names = TRUE, col.names=TRUE)
write.csv(coldata_GSE151347, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE151347_metadata.csv", sep="\t",row.names = TRUE, col.names=TRUE)
all(rownames(coldata_GSE81928) %in% colnames(cts_GSE81928))
cts_GSE81928 <- cts_GSE81928[, rownames(coldata_GSE81928)]
all(rownames(coldata_GSE81928) == colnames(cts_GSE81928))
write.csv(cts_GSE81928, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE81928_raw_data.csv", sep="\t",row.names = TRUE, col.names=TRUE)
write.csv(coldata_GSE81928, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE81928_metadata.csv", sep="\t",row.names = TRUE, col.names=TRUE)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
library(tidyverse)
library(readr)
library(DESeq2)
library(apeglm)
library(RobustRankAggreg)
library(BiocParallel)
register(MulticoreParam(2))
#Import Matrix
cts_GSE104766_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
cts_GSE104766 <- read.csv(cts_GSE104766_path)
# Clean Matrix
cts_GSE104766 <- aggregate(cts_GSE104766[,-1], list(cts_GSE104766$gene_symbol), mean)
rownames(cts_GSE104766) <- cts_GSE104766$Group.1
cts_GSE104766 <- subset(cts_GSE104766, select = -Group.1)
cts_GSE104766 <- subset(cts_GSE104766, select = -gene_symbol)
cts_GSE104766[,]<- lapply(lapply(cts_GSE104766[,-1],round),as.integer)
#Import Matrix
cts_GSE133039_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE133039_GeneLevel_Raw_data.csv"
cts_GSE133039 <- read.csv(cts_GSE133039_path)
# Clean Matrix
cts_GSE133039 <- aggregate(cts_GSE133039[,-1], list(cts_GSE133039$gene_symbol), mean)
rownames(cts_GSE133039) <- cts_GSE133039$Group.1
cts_GSE133039 <- subset(cts_GSE133039, select = -Group.1 )
cts_GSE133039[,]<- lapply(lapply(cts_GSE133039[,-1],round),as.integer)
# Import Data
cts_GSE89775_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE89775_GeneLevel_Raw_data.csv"
cts_GSE89775<- read.csv(cts_GSE89775_path)
# Clean Matrix
cts_GSE89775 <- aggregate(cts_GSE89775[,-1], list(cts_GSE89775$gene_symbol), mean)
rownames(cts_GSE89775) <- cts_GSE89775$Group.1
cts_GSE89775 <- subset(cts_GSE89775, select = -Group.1 )
cts_GSE89775[,]<- lapply(lapply(cts_GSE89775[,-1],round),as.integer)
# Import Data
cts_GSE151347_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE151347_GeneLevel_Raw_data.csv"
cts_GSE151347 <- read.csv(cts_GSE151347_path)
# Clean Matrix
cts_GSE151347 <- aggregate(cts_GSE151347[,-1], list(cts_GSE151347$gene_symbol), mean)
rownames(cts_GSE151347) <- cts_GSE151347$Group.1
cts_GSE151347 <- subset(cts_GSE151347, select = -Group.1 )
cts_GSE151347[,]<- lapply(lapply(cts_GSE151347[,-1],round),as.integer)
# Import Data
cts_GSE81928_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE81928_GeneLevel_Raw_data.csv"
cts_GSE81928 <- read.csv(cts_GSE81928_path)
# Clean Matrix
cts_GSE81928 <- aggregate(cts_GSE81928[,-1], list(cts_GSE81928$gene_symbol), mean)
rownames(cts_GSE81928) <- cts_GSE81928$Group.1
cts_GSE81928 <- subset(cts_GSE81928, select = -Group.1 )
cts_GSE81928[,]<- lapply(lapply(cts_GSE81928[,-1],round),as.integer)
# Import Metadata
Meta_GSE104766_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE104766_filtered_metadata.csv'
coldata_GSE104766 <- read.csv(Meta_GSE104766_path, row.names=1)
coldata_GSE104766$tissue <- factor(coldata_GSE104766$tissue)
# Import Metadata
Meta_GSE133039_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE133039_filtered_metadata.csv'
coldata_GSE133039 <- read.csv(Meta_GSE133039_path, row.names=1)
coldata_GSE133039$tissue <- factor(coldata_GSE133039$tissue)
# Import Metadata
Meta_GSE89775_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE89775_filtered_metadata.csv'
coldata_GSE89775 <- read.csv(Meta_GSE89775_path, row.names=1)
coldata_GSE89775$tissue <- factor(coldata_GSE89775$tissue)
# Import Metadata
Meta_GSE151347_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE151347_filtered_metadata.csv'
coldata_GSE151347 <- read.csv(Meta_GSE151347_path, row.names=1)
coldata_GSE151347$tissue <- factor(coldata_GSE151347$tissue)
# Import Metadata
Meta_GSE81928_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE81928_filtered_metadata.csv'
coldata_GSE81928 <- read.csv(Meta_GSE81928_path, row.names=1)
coldata_GSE81928$tissue <- factor(coldata_GSE81928$tissue)
all(rownames(coldata_GSE104766) %in% colnames(cts_GSE104766))
cts_GSE104766 <- cts_GSE104766[, rownames(coldata_GSE104766)]
all(rownames(coldata_GSE104766) == colnames(cts_GSE104766))
write.csv(cts_GSE104766, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE104766_raw_data.csv", sep="\t",row.names = TRUE, col.names=TRUE)
write.csv(coldata_GSE104766, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE89775_metadata.csv", sep="\t",row.names = TRUE, col.names=TRUE)
all(rownames(coldata_GSE133039) %in% colnames(cts_GSE133039))
cts_GSE133039 <- cts_GSE133039[, rownames(coldata_GSE133039)]
all(rownames(coldata_GSE133039) == colnames(cts_GSE133039))
write.csv(cts_GSE133039, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE133039_raw_data.csv", sep="\t",row.names = TRUE, col.names=TRUE)
write.csv(coldata_GSE133039, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE133039_metadata.csv", sep="\t",row.names = TRUE, col.names=TRUE)
all(rownames(coldata_GSE89775) %in% colnames(cts_GSE89775))
cts_GSE133039 <- cts_GSE89775[, rownames(coldata_GSE89775)]
all(rownames(coldata_GSE89775) == colnames(cts_GSE89775))
write.csv(cts_GSE89775, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE89775_raw_data.csv", sep="\t",row.names = TRUE, col.names=TRUE)
write.csv(coldata_GSE89775, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE89775_metadata.csv", sep="\t",row.names = TRUE, col.names=TRUE)
all(rownames(coldata_GSE151347) %in% colnames(cts_GSE151347))
cts_GSE151347 <- cts_GSE151347[, rownames(coldata_GSE151347)]
all(rownames(coldata_GSE151347) == colnames(cts_GSE151347))
write.csv(cts_GSE151347, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE151347_raw_data.csv", sep="\t",row.names = TRUE, col.names=TRUE)
write.csv(coldata_GSE151347, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE151347_metadata.csv", sep="\t",row.names = TRUE, col.names=TRUE)
all(rownames(coldata_GSE81928) %in% colnames(cts_GSE81928))
cts_GSE81928 <- cts_GSE81928[, rownames(coldata_GSE81928)]
all(rownames(coldata_GSE81928) == colnames(cts_GSE81928))
write.csv(cts_GSE81928, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE81928_raw_data.csv", sep="\t",row.names = TRUE, col.names=TRUE)
write.csv(coldata_GSE81928, file="~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE81928_metadata.csv", sep="\t",row.names = TRUE, col.names=TRUE)
setwd("~/Documents/TFM/GitHub/HB_PublicData")
library(plyr)
library(biomaRt)
library(readr)
library(svMisc)
graph <- read.csv("2-HB-DEGs-on-Liver-Communities/1_Obtaining_Networks/networks/Recon3D_metabolites.gr", sep=' ', header = FALSE)
mart <- useDataset("hsapiens_gene_ensembl", useMart('ENSEMBL_MART_ENSEMBL', host = 'useast.ensembl.org'))
not_translated <- numeric()
n <- nrow(graph)
for (i in 1:n) {
gene <- graph$V1[i]
gene <- getBM(filters= 'entrezgene_id', attributes= c('entrezgene_id','hgnc_symbol'),values=gene, mart= mart)
if (empty(gene) == FALSE) {
graph$V1[i] <- gene$hgnc_symbol
} else {
not_translated <- c(not_translated, i)
}
# Update the progress bar
progress(i,n)
}
for (i in 1:n) {
gene <- graph$V2[i]
gene <- getBM(filters= 'entrezgene_id', attributes= c('entrezgene_id','hgnc_symbol'),values=gene, mart= mart)
if (empty(gene) == FALSE) {
graph$V2[i] <- gene$hgnc_symbol
} else {
not_translated <- c(not_translated, i)
}
# Update the progress bar
progress(i,n)
}
graph_final <- graph
for (i in not_translated){
graph_final <- graph_final[-c(i),]
}
write_csv(graph_final, path = "2-HB-DEGs-on-Liver-Communities/1_Obtaining_Networks/networks/Recon3D_metabolites3.gr")
mart <- useDataset("hsapiens_gene_ensembl", useMart('ENSEMBL_MART_ENSEMBL', host = 'useast.ensembl.org'))
mart <- useDataset("hsapiens_gene_ensembl", useMart('ENSEMBL_MART_ENSEMBL'))
not_translated <- numeric()
n <- nrow(graph)
for (i in 1:n) {
gene <- graph$V1[i]
gene <- getBM(filters= 'entrezgene_id', attributes= c('entrezgene_id','hgnc_symbol'),values=gene, mart= mart)
if (empty(gene) == FALSE) {
graph$V1[i] <- gene$hgnc_symbol
} else {
not_translated <- c(not_translated, i)
}
# Update the progress bar
progress(i,n)
}
for (i in 1:n) {
gene <- graph$V2[i]
gene <- getBM(filters= 'entrezgene_id', attributes= c('entrezgene_id','hgnc_symbol'),values=gene, mart= mart)
if (empty(gene) == FALSE) {
graph$V2[i] <- gene$hgnc_symbol
} else {
not_translated <- c(not_translated, i)
}
# Update the progress bar
progress(i,n)
}
graph_final <- graph
for (i in not_translated){
graph_final <- graph_final[-c(i),]
}
write_csv(graph_final, path = "2-HB-DEGs-on-Liver-Communities/1_Obtaining_Networks/networks/Recon3D_metabolites3.gr")
library(plyr)
library(biomaRt)
library(readr)
library(svMisc)
graph <- read.csv("2-HB-DEGs-on-Liver-Communities/1_Obtaining_Networks/networks/Recon3D_metabolites.gr", sep=' ', header = FALSE)
mart <- useDataset("hsapiens_gene_ensembl", useMart('ENSEMBL_MART_ENSEMBL'))
not_translated <- numeric()
n <- nrow(graph)
for (i in 1:n) {
gene <- graph$V2[i]
gene <- getBM(filters= 'entrezgene_id', attributes= c('entrezgene_id','hgnc_symbol'),values=gene, mart= mart)
if (empty(gene) == FALSE) {
graph$V2[i] <- gene$hgnc_symbol
} else {
not_translated <- c(not_translated, i)
}
# Update the progress bar
progress(i,n)
}
for (i in 1:n) {
gene <- graph$V1[i]
gene <- getBM(filters= 'entrezgene_id', attributes= c('entrezgene_id','hgnc_symbol'),values=gene, mart= mart)
if (empty(gene) == FALSE) {
graph$V1[i] <- gene$hgnc_symbol
} else {
not_translated <- c(not_translated, i)
}
# Update the progress bar
progress(i,n)
}
graph_final <- graph
for (i in not_translated){
graph_final <- graph_final[-c(i),]
}
write_csv(graph_final, path = "2-HB-DEGs-on-Liver-Communities/1_Obtaining_Networks/networks/Recon3D_metabolites3.gr")
library(plyr)
library(biomaRt)
library(readr)
library(svMisc)
graph <- read.csv("2-HB-DEGs-on-Liver-Communities/1_Obtaining_Networks/networks/Recon3D_metabolites.gr", sep=' ', header = FALSE)
mart <- useDataset("hsapiens_gene_ensembl", useMart('ENSEMBL_MART_ENSEMBL'))
not_translated <- numeric()
n <- nrow(graph)
for (i in 1:n) {
gene <- graph$V2[i]
gene <- getBM(filters= 'entrezgene_id', attributes= c('entrezgene_id','hgnc_symbol'),values=gene, mart= mart)
if (empty(gene) == FALSE) {
graph$V2[i] <- gene$hgnc_symbol
} else {
not_translated <- c(not_translated, i)
}
# Update the progress bar
progress(i,n)
}
write_csv(graph, path = "2-HB-DEGs-on-Liver-Communities/1_Obtaining_Networks/networks/Recon3D_metabolitesv2.gr")
for (i in 1:n) {
gene <- graph$V1[i]
gene <- getBM(filters= 'entrezgene_id', attributes= c('entrezgene_id','hgnc_symbol'),values=gene, mart= mart)
if (empty(gene) == FALSE) {
graph$V1[i] <- gene$hgnc_symbol
} else {
not_translated <- c(not_translated, i)
}
# Update the progress bar
progress(i,n)
}
