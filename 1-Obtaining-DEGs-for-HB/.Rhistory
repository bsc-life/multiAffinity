raw_counts_GSE104766 <- read.csv("Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv", row.names='gene_id')
raw_counts_GSE104766 <- as.matrix(read.csv("Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"))
cts_GSE104766_path <- "Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
Anno_GSE104766_path <- 'Metadata_HB/GSE104766_filtered_metadata.csv'
cts_GSE104766 <- as.matrix(read.csv(cts_GSE104766_path))
coldata <- read.csv(Anno_GSE104766_path, row.names=1)
View(coldata)
View(cts_GSE104766)
cts_GSE104766_path <- "Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
Anno_GSE104766_path <- 'Metadata_HB/GSE104766_filtered_metadata.csv'
cts_GSE104766 <- as.matrix(read.csv(cts_GSE104766_path, row.names='gene_symbol))
coldata <- read.csv(Anno_GSE104766_path, row.names=1)
cts_GSE104766_path <- "Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
Anno_GSE104766_path <- 'Metadata_HB/GSE104766_filtered_metadata.csv'
cts_GSE104766 <- as.matrix(read.csv(cts_GSE104766_path, row.names='gene_symbol'))
cts_GSE104766_path <- "Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
Anno_GSE104766_path <- 'Metadata_HB/GSE104766_filtered_metadata.csv'
cts_GSE104766 <- as.matrix(read.csv(cts_GSE104766_path, row.names='gene_symbol'))
View(cts_GSE104766)
cts_GSE104766_path <- "Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
cts_GSE104766_path <- "Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
Anno_GSE104766_path <- 'Metadata_HB/GSE104766_filtered_metadata.csv'
cts_GSE104766 <- as.matrix(read.csv(cts_GSE104766_path, row.names='gene_symbol'))
cts_GSE104766_path <- "Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
Anno_GSE104766_path <- 'Metadata_HB/GSE104766_filtered_metadata.csv'
cts_GSE104766 <- as.matrix(read.csv(cts_GSE104766_path, row.names='gene_symbol'))
cts_GSE104766_path <- "Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
Anno_GSE104766_path <- 'Metadata_HB/GSE104766_filtered_metadata.csv'
cts_GSE104766 <- as.matrix(read.csv(cts_GSE104766_path, row.names=1))
cts_GSE104766_path <- "Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
Anno_GSE104766_path <- 'Metadata_HB/GSE104766_filtered_metadata.csv'
cts_GSE104766 <- as.matrix(read.csv(cts_GSE104766_path,sep="\t", row.names='gene_symbol'))
cts_GSE104766_path <- "Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
Anno_GSE104766_path <- 'Metadata_HB/GSE104766_filtered_metadata.csv'
cts_GSE104766 <- as.matrix(read.csv(cts_GSE104766_path))
coldata <- read.csv(Anno_GSE104766_path, row.names=1)
cts_GSE104766_path <- "Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
Anno_GSE104766_path <- 'Metadata_HB/GSE104766_filtered_metadata.csv'
cts_GSE104766 <- as.matrix(read.csv(cts_GSE104766_path,sep="\t", quote=""))
coldata <- read.csv(Anno_GSE104766_path, row.names=1)
cts_GSE104766_path <- "Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
Anno_GSE104766_path <- 'Metadata_HB/GSE104766_filtered_metadata.csv'
cts_GSE104766 <- as.matrix(read.csv(cts_GSE104766_path,sep="\t", quote="",row.names=1))
View(cts_GSE104766)
cts_GSE104766_path <- "Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
Anno_GSE104766_path <- 'Metadata_HB/GSE104766_filtered_metadata.csv'
cts_GSE104766 <- as.matrix(read.csv(cts_GSE104766_path,sep=",", quote="",row.names=1))
View(cts_GSE104766)
cts_GSE104766_path <- "Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
Anno_GSE104766_path <- 'Metadata_HB/GSE104766_filtered_metadata.csv'
cts_GSE104766 <- as.matrix(read.csv(cts_GSE104766_path,sep=",", quote="")
coldata <- read.csv(Anno_GSE104766_path, row.names=1)
cts_GSE104766_path <- "Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
Anno_GSE104766_path <- 'Metadata_HB/GSE104766_filtered_metadata.csv'
cts_GSE104766 <- as.matrix(read.csv(cts_GSE104766_path,sep=",", quote=""))
coldata <- read.csv(Anno_GSE104766_path, row.names=1)
View(cts_GSE104766)
cts_GSE104766[duplicated(cts_GSE104766)]
View(cts_GSE104766)
names <- cts_GSE104766$gene_symbols
names <- cts_GSE104766$1
names <- pull(cts_GSE104766, x1)
library("dplyr")
install.packages("dplyr")
View(cts_GSE104766)
library("dplyr")
library("dplyr")
names <- cts_GSE104766[ ,'gene_symbol']
names[duplicated(cts_GSE104766)]
names <- cts_GSE104766[ ,'gene_symbol']
names[duplicated(names)]
cts_GSE104766_path <- "Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
Anno_GSE104766_path <- 'Metadata_HB/GSE104766_filtered_metadata.csv'
cts_GSE104766 <- as.matrix(read.csv(cts_GSE104766_path,sep=",", quote="", row.names=1))
coldata <- read.csv(Anno_GSE104766_path, row.names=1)
View(coldata)
View(cts_GSE104766)
View(cts_GSE104766)
View(coldata)
View(coldata)
cts_GSE104766_path <- "Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
Anno_GSE104766_path <- 'Metadata_HB/GSE104766_filtered_metadata.csv'
cts_GSE104766 <- as.matrix(read.csv(cts_GSE104766_path,sep=",", quote="", row.names=1))
coldata <- read.csv(Anno_GSE104766_path, row.names=1)
coldata$tissue <- factor(coldata$tissue)
head(cts,2)
head(cts_GSE104766,2)
cts_GSE104766_path <- "Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
Anno_GSE104766_path <- 'Metadata_HB/GSE104766_filtered_metadata.csv'
cts_GSE104766 <- as.matrix(read.csv(cts_GSE104766_path,sep=",", quote="", row.names=1))
coldata <- read.csv(Anno_GSE104766_path, row.names=1)
coldata$tissue <- factor(coldata$tissue)
head(cts_GSE104766,2)
coldata
cts_GSE104766_path <- "Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
Anno_GSE104766_path <- 'Metadata_HB/GSE104766_filtered_metadata.csv'
cts_GSE104766 <- as.matrix(read.csv(cts_GSE104766_path,sep=",", quote="", row.names=1))
coldata <- read.csv(Anno_GSE104766_path, row.names=1)
coldata$tissue <- factor(coldata$tissue)
coldata$cell.type <- factor(coldata$cell.type)
coldata
all(rownames(coldata) %in% colnames(cts_GSE104766))
all(rownames(coldata) %in% colnames(cts_GSE104766))
all(rownames(coldata) == colnames(cts_GSE104766))
dds <- DESeqDataSetFromMatrix(countData = cts_GSE104766,
colData = coldata,
design = ~ cell.type)
cts_GSE104766_path <- "Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
Anno_GSE104766_path <- 'Metadata_HB/GSE104766_filtered_metadata.csv'
cts_GSE104766 <- read.csv(cts_GSE104766_path,sep=",", quote="", row.names=1)
cts_GSE104766[,-1]<- lapply(lapply(cts_GSE104766[,-1],round),as.integer)
cts_GSE104766 <- as.matrix(cts_GSE104766)
coldata <- read.csv(Anno_GSE104766_path, row.names=1)
coldata$tissue <- factor(coldata$tissue)
coldata$cell.type <- factor(coldata$cell.type)
all(rownames(coldata) %in% colnames(cts_GSE104766))
all(rownames(coldata) == colnames(cts_GSE104766))
dds <- DESeqDataSetFromMatrix(countData = cts_GSE104766,
colData = coldata,
design = ~ cell.type)
View(cts_GSE104766)
cts_GSE104766_path <- "Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
Anno_GSE104766_path <- 'Metadata_HB/GSE104766_filtered_metadata.csv'
cts_GSE104766 <- read.csv(cts_GSE104766_path,sep=",", quote="", row.names=1)
cts_GSE104766[,]<- lapply(lapply(cts_GSE104766[,-1],round),as.integer)
cts_GSE104766 <- as.matrix(cts_GSE104766)
coldata <- read.csv(Anno_GSE104766_path, row.names=1)
coldata$tissue <- factor(coldata$tissue)
coldata$cell.type <- factor(coldata$cell.type)
all(rownames(coldata) %in% colnames(cts_GSE104766))
all(rownames(coldata) == colnames(cts_GSE104766))
dds <- DESeqDataSetFromMatrix(countData = cts_GSE104766,
colData = coldata,
design = ~ cell.type)
dds
keep <- rowSums(counts(dds)) >= 10
dds <- dds[keep,]
View(coldata)
View(coldata)
# delete cell line samples
rownames(coldata)[coldata$cell.type == 'cell line']
# delete cell line samples
cell_line_samples <- rownames(coldata)[coldata$cell.type == 'cell line']
coldata = coldata[,!(names(coldata) %in% cell_line_samples)]
View(coldata)
# delete cell line samples
cell_line_samples <- rownames(coldata)[coldata$cell.type == 'cell line']
coldata = coldata[!(names(coldata) %in% cell_line_samples),]
# delete cell line samples
cell_line_samples <- rownames(coldata)[coldata$cell.type == 'cell line']
coldata = coldata[!(names(coldata) %in% cell_line_samples),]
View(coldata)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(DESeq2)
library(tidyverse)
install.packages("tidyverse")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(DESeq2)
library(tidyverse)
install.packages("lifecycle")
install.packages("lifecycle")
install.packages("lifecycle")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(DESeq2)
library(tidyverse)
install.packages("lifecycle")
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
library(tidyverse)
library(readr)
library(DESeq2)
library(apeglm)
library(RobustRankAggreg)
library(BiocParallel)
register(MulticoreParam(2))
setwd("~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB")
# Import Data
cts_GSE104766_path <- "Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
cts_GSE104766 <- read.csv(cts_GSE104766_path, row.names=1)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
library(tidyverse)
library(readr)
library(DESeq2)
library(apeglm)
library(RobustRankAggreg)
library(BiocParallel)
register(MulticoreParam(2))
setwd("~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB")
# Import Data
cts_GSE104766_path <- "Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
cts_GSE104766 <- read.csv(cts_GSE104766_path, row.names=1)
# Import Data
cts_GSE104766_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
cts_GSE104766 <- read.csv(cts_GSE104766_path, row.names=1)
cts_GSE104766[,]<- lapply(lapply(cts_GSE104766[,-1],round),as.integer)
# Import Data
cts_GSE104766_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
cts_GSE104766 <- read.csv(cts_GSE104766_path, row.names=1)
cts_GSE104766[,]<- lapply(lapply(cts_GSE104766[,-1],round),as.integer)
# Import Metadata
Meta_GSE104766_path <- 'Metadata_HB/GSE104766_filtered_metadata.csv'
coldata_GSE104766 <- read.csv(Meta_GSE104766_path, row.names=1)
# Import Metadata
Meta_GSE104766_path <- '~/Metadata_HB/GSE104766_filtered_metadata.csv'
coldata_GSE104766 <- read.csv(Meta_GSE104766_path, row.names=1)
# Import Metadata
Meta_GSE104766_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE104766_filtered_metadata.csv'
coldata_GSE104766 <- read.csv(Meta_GSE104766_path, row.names=1)
# Import Metadata
Meta_GSE104766_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE104766_filtered_metadata.csv'
coldata_GSE104766 <- read.csv(Meta_GSE104766_path, row.names=1)
coldata_GSE104766$tissue[coldata_GSE104766$tissue == "Normal liver"] <- "Normal"
coldata_GSE104766$tissue <- factor(coldata_GSE104766$tissue)
# Import Data
cts_GSE104766_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
cts_GSE104766 <- read.csv(cts_GSE104766_path, row.names=1)
cts_GSE104766[,]<- lapply(lapply(cts_GSE104766[,-1],round),as.integer)
# Convert data to matrix
cts_GSE104766 <- as.matrix(cts_GSE104766)
# Import Metadata
Meta_GSE104766_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE104766_filtered_metadata.csv'
coldata_GSE104766 <- read.csv(Meta_GSE104766_path, row.names=1)
coldata_GSE104766$tissue[coldata_GSE104766$tissue == "Normal liver"] <- "Normal"
coldata_GSE104766$tissue <- factor(coldata_GSE104766$tissue)
all(rownames(coldata_GSE104766) %in% colnames(cts_GSE104766))
all(rownames(coldata_GSE104766) == colnames(cts_GSE104766))
#cts_GSE133039 <- cts_GSE133039[, rownames(coldata_GSE133039)]
#all(rownames(coldata_GSE133039) == colnames(cts_GSE133039))
View(coldata_GSE104766)
View(cts_GSE104766)
View(coldata_GSE104766)
View(cts_GSE104766)
# Import Data
cts_GSE104766_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
cts_GSE104766 <- read.csv(cts_GSE104766_path, row.names=1)
# Import Metadata
Meta_GSE104766_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE104766_filtered_metadata.csv'
coldata_GSE104766 <- read.csv(Meta_GSE104766_path, row.names=1)
coldata_GSE104766$tissue[coldata_GSE104766$tissue == "Normal liver"] <- "Normal"
coldata_GSE104766$tissue <- factor(coldata_GSE104766$tissue)
# Import Data
cts_GSE104766_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
cts_GSE104766 <- read.csv(cts_GSE104766_path, row.names=1)
# Import Data
cts_GSE104766_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
cts_GSE104766 <- read.csv(cts_GSE104766_path, row.names=1)
# Import Data
cts_GSE104766_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
cts_GSE104766 <- read.csv(cts_GSE104766_path)
cts_GSE104766[,]<- lapply(lapply(cts_GSE104766[,-1],round),as.integer)
# Convert data to matrix
cts_GSE104766 <- as.matrix(cts_GSE104766)
# Import Data
cts_GSE104766_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
cts_GSE104766 <- read.csv(cts_GSE104766_path)
cts_GSE104766 <- aggregate(cts_GSE104766[,-1], list(cts_GSE104766$gene_symbol), mean)
View(cts_GSE104766)
# Import Data
cts_GSE104766_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
cts_GSE104766 <- read.csv(cts_GSE104766_path)
cts_GSE104766 <- aggregate(cts_GSE104766[,-1], list(cts_GSE104766$gene_symbol), mean)
View(cts_GSE104766)
rownames(cts_GSE104766) <- cts_GSE104766$Group.1
# Import Data
cts_GSE104766_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
cts_GSE104766 <- read.csv(cts_GSE104766_path)
# Clean Matrix
cts_GSE104766 <- aggregate(cts_GSE104766[,-1], list(cts_GSE104766$gene_symbol), mean)
rownames(cts_GSE104766) <- cts_GSE104766$Group.1
cts_GSE104766 <- subset( cts_GSE104766, select = -Group.1 )
# Import Data
cts_GSE104766_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
cts_GSE104766 <- read.csv(cts_GSE104766_path)
# Clean Matrix
cts_GSE104766 <- aggregate(cts_GSE104766[,-1], list(cts_GSE104766$gene_symbol), mean)
rownames(cts_GSE104766) <- cts_GSE104766$Group.1
cts_GSE104766 <- subset( cts_GSE104766, select = -Group.1 )
cts_GSE104766[,]<- lapply(lapply(cts_GSE104766[,-1],round),as.integer)
# Import Data
cts_GSE104766_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
cts_GSE104766 <- read.csv(cts_GSE104766_path)
# Clean Matrix
cts_GSE104766 <- aggregate(cts_GSE104766[,-1], list(cts_GSE104766$gene_symbol), mean)
rownames(cts_GSE104766) <- cts_GSE104766$Group.1
cts_GSE104766 <- subset( cts_GSE104766, select = -Group.1 )
cts_GSE104766[,]<- lapply(lapply(cts_GSE104766[,-1],round),as.integer)
# Convert data to matrix
cts_GSE104766 <- as.matrix(cts_GSE104766)
# Import Metadata
Meta_GSE104766_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE104766_filtered_metadata.csv'
coldata_GSE104766 <- read.csv(Meta_GSE104766_path, row.names=1)
coldata_GSE104766$tissue[coldata_GSE104766$tissue == "Normal liver"] <- "Normal"
coldata_GSE104766$tissue <- factor(coldata_GSE104766$tissue)
all(rownames(coldata_GSE104766) %in% colnames(cts_GSE104766))
all(rownames(coldata_GSE104766) == colnames(cts_GSE104766))
#cts_GSE133039 <- cts_GSE133039[, rownames(coldata_GSE133039)]
#all(rownames(coldata_GSE133039) == colnames(cts_GSE133039))
#Create DSeq2 object
dds_GSE104766 <- DESeqDataSetFromMatrix(countData = cts_GSE104766,
colData = coldata_GSE104766,
design = ~ tissue)
# Pre-filtering
keep <- rowSums(counts(dds_GSE104766)) >= 10
dds_GSE104766 <- dds_GSE104766[keep,]
# Factor Level
dds_GSE104766$tissue <- relevel(dds_GSE104766$tissue, ref = "Normal")
# Median of ratios Normalization
dds_GSE104766 <- estimateSizeFactors(dds_GSE104766)
#normalized_counts_GSE104766 <- counts(dds_GSE104766, normalized=TRUE)
#write.table(normalized_counts_GSE104766, file="Matrices_HB/GSE104766_normalized_counts.txt", sep="\t", quote=F, col.names=NA)
#Create DSeq2 object
dds_GSE104766 <- DESeqDataSetFromMatrix(countData = cts_GSE104766,
colData = coldata_GSE104766,
design = ~ tissue)
# Pre-filtering
dds_GSE104766 <- dds_GSE104766[rowSums(counts(dds_GSE104766)) >= 10,]
# Factor Level
dds_GSE104766$tissue <- relevel(dds_GSE104766$tissue, ref = "Normal")
# Median of ratios Normalization
dds_GSE104766 <- estimateSizeFactors(dds_GSE104766)
#normalized_counts_GSE104766 <- counts(dds_GSE104766, normalized=TRUE)
#write.table(normalized_counts_GSE104766, file="Matrices_HB/GSE104766_normalized_counts.txt", sep="\t", quote=F, col.names=NA)
dds_GSE104766 <- DESeq(dds_GSE104766, parallel=TRUE)
res_GSE104766 <- results(dds_GSE104766, parallel=TRUE)
res_GSE104766 <- subset(res_GSE104766, padj < 0.05)
res_GSE104766
install.packages("effectsize")
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
library(tidyverse)
library(readr)
library(DESeq2)
library(apeglm)
library(RobustRankAggreg)
library(effectsize)
library(BiocParallel)
register(MulticoreParam(2))
setwd("~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB")
dds_GSE104766 %>% cohens_d(score ~ group, var.equal = FALSE)
dds_GSE104766 %>% cohens_d(Hepatoblastoma ~ tissue, var.equal = FALSE)
plotMA(res, ylim=c(-5,5))
plotMA(res_GSE104766, ylim=c(-5,5))
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
library(tidyverse)
library(readr)
library(DESeq2)
library(apeglm)
library(RobustRankAggreg)
library(BiocParallel)
register(MulticoreParam(2))
setwd("~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB")
# apeglm Shrinkage estimator
resultsNamesdds_GSE104766)
# apeglm Shrinkage estimator
results(Namesdds_GSE104766)
# apeglm Shrinkage estimator
resultsNames(dds_GSE104766)
# apeglm Shrinkage estimator
resultsNames(dds_GSE104766)
res2_GSE104766 <- lfcShrink(dds_GSE104766, coef="tissue_Hepatoblastoma_vs_Normal"   , type="apeglm")
# apeglm Shrinkage estimator and add minimum effect size
resultsNames(dds_GSE104766)
res2_GSE104766 <- lfcShrink(dds_GSE104766, coef="tissue_Hepatoblastoma_vs_Normal", type="apeglm", lfcThreshold=1)
plotMA(res2_GSE104766, ylim=c(-5,5))
dds_GSE104766 <- DESeq(dds_GSE104766, parallel=TRUE)
# apeglm Shrinkage estimator and add minimum effect size
resultsNames(dds_GSE104766)
res_GSE104766 <- lfcShrink(dds_GSE104766, coef="tissue_Hepatoblastoma_vs_Normal", type="apeglm", lfcThreshold=1)
# Filter for adj p-value < 0.05
res_GSE104766 <- subset(res_GSE104766, padj < 0.05)
View(res_GSE104766)
dds_GSE104766 <- DESeq(dds_GSE104766, parallel=TRUE)
res_GSE104766 <- results(dds_GSE104766, parallel=TRUE)
# apeglm Shrinkage estimator and add minimum effect size
resultsNames(dds_GSE104766)
res_GSE104766 <- lfcShrink(dds_GSE104766, coef="tissue_Hepatoblastoma_vs_Normal", type="apeglm", lfcThreshold=1)
# Filter for adj p-value < 0.05
res_GSE104766 <- subset(res_GSE104766, padj < 0.05)
dds_GSE104766 <- DESeq(dds_GSE104766, parallel=TRUE)
res_GSE104766 <- results(dds_GSE104766, parallel=TRUE)
# apeglm Shrinkage estimator and add minimum effect size
resultsNames(dds_GSE104766)
res_GSE104766 <- lfcShrink(dds_GSE104766, coef="tissue_Hepatoblastoma_vs_Normal", type="apeglm", lfcThreshold=1)
dds_GSE104766 <- DESeq(dds_GSE104766, parallel=TRUE)
# apeglm Shrinkage estimator and add minimum effect size
resultsNames(dds_GSE104766)
res_GSE104766 <- lfcShrink(dds_GSE104766, coef="tissue_Hepatoblastoma_vs_Normal", type="apeglm", lfcThreshold=1)
nrow(res_GSE104766)
res_GSE104766 <- res.lfcShrink$padj < 0.05
dds_GSE104766 <- DESeq(dds_GSE104766, parallel=TRUE)
# apeglm Shrinkage estimator and add minimum effect size
resultsNames(dds_GSE104766)
res_GSE104766 <- lfcShrink(dds_GSE104766, coef="tissue_Hepatoblastoma_vs_Normal", type="apeglm", lfcThreshold=1)
nrow(res_GSE104766)
res_GSE104766 <- res_GSE104766$padj < 0.05
nrow(res_GSE104766)
res_GSE104766 <- results(dds_GSE104766, parallel=TRUE)
nrow(res_GSE104766)
### Get summary of results ###
summary(res_GSE104766,
alpha = 0.05)
### Get total number of differentially expressed genes ###
sum(res.lfcShrink$padj < 0.05,
na.rm=TRUE)
### Get total number of differentially expressed genes ###
sum(res_GSE104766$padj < 0.05,
na.rm=TRUE)
# Order all results by FDR
res_GSE104766.ordered <- res_GSE104766[order(res_GSE104766$padj),]
# Extract all differentially expressed genes
res_GSE104766_05 <- res_GSE104766.ordered %>%
filter(padj < 0.05)
# Order all results by FDR
res_GSE104766.ordered <- res_GSE104766[order(res_GSE104766$padj),]
# Extract all differentially expressed genes
res_GSE104766_05 <- res_GSE104766.ordered %>%
filter(padj < 0.05)
View(res_GSE104766.ordered)
```{r}
dds_GSE104766 <- DESeq(dds_GSE104766, parallel=TRUE)
# apeglm Shrinkage estimator and add minimum effect size
resultsNames(dds_GSE104766)
# Shrink LFC to obtain more accurate effect sizes
res_GSE104766 <- lfcShrink(dds_GSE104766, coef="tissue_Hepatoblastoma_vs_Normal", type="apeglm", lfcThreshold=1)
# Get total number of differentially expressed genes
sum(res_GSE104766$padj < 0.05,
na.rm=TRUE)
# Order all results by FDR
res_GSE104766.ordered <- res_GSE104766[order(res_GSE104766$padj),]
# Order all results by FDR
res_GSE104766.ordered <- res_GSE104766[order(res_GSE104766$padj),]
---
title: "Normalization of the different studies"
author: "Mar Batlle"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
library(tidyverse)
library(readr)
library(DESeq2)
library(apeglm)
library(RobustRankAggreg)
library(BiocParallel)
register(MulticoreParam(2))
setwd("~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB")
```
https://hbctraining.github.io/DGE_workshop/lessons/02_DGE_count_normalization.html
# GSE104766
## Import data
```{r}
# Import Data
cts_GSE104766_path <- "~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Matrices_HB/Originals_HB/GSE104766_GeneLevel_Raw_data.csv"
cts_GSE104766 <- read.csv(cts_GSE104766_path)
# Clean Matrix
cts_GSE104766 <- aggregate(cts_GSE104766[,-1], list(cts_GSE104766$gene_symbol), mean)
rownames(cts_GSE104766) <- cts_GSE104766$Group.1
cts_GSE104766 <- subset( cts_GSE104766, select = -Group.1 )
cts_GSE104766[,]<- lapply(lapply(cts_GSE104766[,-1],round),as.integer)
# Convert data to matrix
cts_GSE104766 <- as.matrix(cts_GSE104766)
```
```{r}
# Import Metadata
Meta_GSE104766_path <- '~/Documents/TFM/GitHub/HB_PublicData/1-Obtaining-DEGs-for-HB/Metadata_HB/GSE104766_filtered_metadata.csv'
coldata_GSE104766 <- read.csv(Meta_GSE104766_path, row.names=1)
coldata_GSE104766$tissue[coldata_GSE104766$tissue == "Normal liver"] <- "Normal"
coldata_GSE104766$tissue <- factor(coldata_GSE104766$tissue)
```
Check that data and metadata are consistent and in the same order
```{r}
all(rownames(coldata_GSE104766) %in% colnames(cts_GSE104766))
all(rownames(coldata_GSE104766) == colnames(cts_GSE104766))
#cts_GSE133039 <- cts_GSE133039[, rownames(coldata_GSE133039)]
#all(rownames(coldata_GSE133039) == colnames(cts_GSE133039))
```
## Normalization
```{r}
#Create DSeq2 object
dds_GSE104766 <- DESeqDataSetFromMatrix(countData = cts_GSE104766,
colData = coldata_GSE104766,
design = ~ tissue)
# Filter out all genes with <10 reads total across all samples
dds_GSE104766 <- dds_GSE104766[rowSums(counts(dds_GSE104766)) >= 10,]
# Factor Level
dds_GSE104766$tissue <- relevel(dds_GSE104766$tissue, ref = "Normal")
# Median of ratios Normalization
dds_GSE104766 <- estimateSizeFactors(dds_GSE104766)
#normalized_counts_GSE104766 <- counts(dds_GSE104766, normalized=TRUE)
#write.table(normalized_counts_GSE104766, file="Matrices_HB/GSE104766_normalized_counts.txt", sep="\t", quote=F, col.names=NA)
```
